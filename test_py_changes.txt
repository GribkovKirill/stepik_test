1. Создал базовую программу, работавшую только под windows и только на моём ПК.
2. Адаптировал(наверное) её под работу на любом пк, с созданием в корневом каталоге папки с zip архивами.
3. Переделал класс ListStream в StrStream, что было костылём. Добавил костыль с переносом последней строки в correct answer.
Перевёл все комментарии и выводы строк на английский язык. Следующее что хочется это придумать механизм удаления неактуальных zip-архивов.
Например если в папке tests стало больше 1 архива, то более старые удаляются.
Решено(наверное). Теперь нет папки tests. Zip архив помещается в корневую папку, а при вызове из Downloads свежего zip-архива
все файлы с рсширением zip удаляются из корневой папки.
4. Решил переделать с использованием zip_save.txt, в который будет записываться название актуального zip. При запуске программа спросит
актуален ли zip-архив. Если да, то ничего вводить не нужно. Теперь название удаляемого архива будет известно из zip_save.txt, что возможно
обезопасит архивы, не являющиеся временными.
4.5 Теперь все операции с архивами происходят внутри папки загрузки, вызов тестирования происходит из командной строки. Docstrings изменю попозже,
когда появится финальное представление как окончательно будет работать программа. На момент сейчас предполагается, что будет несколько скриптов
относительно входных данных, но пока они идут однообразными ничего переделывать не буду.
5. Избавился от ошибок в __main__ посредством полного чтения easy.py внутри __main__. Создал пакет с модулями streams и test_manager. В первый
перенёс потоковый вывод и в будущем будет реализован потоковый ввод. Во втором предполагается изменение поведения тестов в зависимости от
входных данных.